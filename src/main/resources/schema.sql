DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS GENRE CASCADE;
DROP TABLE IF EXISTS MPA CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS LIST_OF_FRIENDS CASCADE;
DROP TABLE IF EXISTS LIST_OF_LIKES CASCADE;
DROP TABLE IF EXISTS LIST_OF_GENRES CASCADE;

-- FILMS definition;
CREATE TABLE IF NOT EXISTS FILMS
(
    ID           INTEGER                NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME         CHARACTER VARYING(255) NOT NULL,
    DESCRIPTION  CHARACTER VARYING(200),
    DURATION     INTEGER                NOT NULL,
    RELEASE_DATE DATE                   NOT NULL,
    MPA_ID       INTEGER
);

-- GENRE definition
CREATE TABLE IF NOT EXISTS GENRE
(
    ID   INTEGER               NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME CHARACTER VARYING(20) NOT NULL
);

-- LIST_OF_GENRES definition
CREATE TABLE IF NOT EXISTS LIST_OF_GENRES
(
    ID       INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID  INTEGER,
    GENRE_ID INTEGER
);

-- MPA definition;
CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ORIG_ID INTEGER               NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME    CHARACTER VARYING(10) NOT NULL
);

-- USERS definition
CREATE TABLE IF NOT EXISTS USERS
(
    ID       INTEGER                NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    CHARACTER VARYING(255) NOT NULL,
    LOGIN    CHARACTER VARYING(255) NOT NULL,
    NAME     CHARACTER VARYING(255),
    BIRTHDAY DATE                   NOT NULL
);

-- LIST_OF_FRIENDS definition
CREATE TABLE IF NOT EXISTS LIST_OF_FRIENDS
(
    ID        INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_1_ID INTEGER,
    USER_2_ID INTEGER
);

-- LIST_OF_LIKES definition
CREATE TABLE IF NOT EXISTS LIST_OF_LIKES
(
    ID      INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID INTEGER,
    USER_ID INTEGER
);

ALTER TABLE FILMS
    ADD FOREIGN KEY (MPA_ID) REFERENCES MPA (MPA_ORIG_ID);
ALTER TABLE LIST_OF_GENRES
    ADD FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID);
ALTER TABLE LIST_OF_GENRES
    ADD FOREIGN KEY (GENRE_ID) REFERENCES GENRE (ID);
ALTER TABLE LIST_OF_LIKES
    ADD FOREIGN KEY (FILM_ID) REFERENCES FILMS (ID);
ALTER TABLE LIST_OF_LIKES
    ADD FOREIGN KEY (USER_ID) REFERENCES USERS (ID);
ALTER TABLE LIST_OF_FRIENDS
    ADD FOREIGN KEY (USER_1_ID) REFERENCES USERS (ID);
ALTER TABLE LIST_OF_FRIENDS
    ADD FOREIGN KEY (USER_2_ID) REFERENCES USERS (ID);